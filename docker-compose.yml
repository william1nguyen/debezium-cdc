services:
  postgres:
    image: postgres:17
    container_name: postgres
    hostname: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped
    command: >
      postgres
      -c wal_level=logical
      -c max_wal_senders=1
      -c max_replication_slots=1
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    networks:
      - private_network

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    hostname: kafka
    ports:
      - 9094:9094
      - 6666:6666
    volumes:
      - kafka_data:/bitnami/kafka
    restart: unless-stopped
    environment:
      # kraft
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093

      # listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true

      # cleanup
      KAFKA_CFG_CLEANUP_POLICY: compact

      # jmx metrics (for ui)
      JMX_PORT: 6666
    networks:
      - private_network

  kafka-ui:
    depends_on:
      - kafka
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    hostname: kafka-io
    ports:
      - 8088:8080
    restart: unless-stopped
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 6666

      # auth
      AUTH_TYPE: "LOGIN_FORM"
      SPRING_SECURITY_USER_NAME: nova
      SPRING_SECURITY_USER_PASSWORD: password
    networks:
      - private_network
  
  debezium-connect:  
    depends_on:
      - kafka
      - postgres
    image: quay.io/debezium/connect:3.0
    container_name: debezium-connect
    hostname: debezium-connect
    ports:
      - 8083:8083
    restart: unless-stopped
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: config-storage
      OFFSET_STORAGE_TOPIC: offset-storage
      STATUS_STORAGE_TOPIC: status-storage
      CONNECT_TOPIC_CREATION_ENABLE: true
    networks:
      - private_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  clickhouse:
    image: bitnami/clickhouse:24
    container_name: clickhouse
    hostname: clickhouse
    ports:
      - 8123:8123
      - 9090:9090
    volumes:
      - clickhouse_data:/bitnami/clickhouse
    restart: unless-stopped
    environment:
      CLICKHOUSE_ADMIN_USER: admin
      CLICKHOUSE_ADMIN_PASSWORD: password
    networks:
      - private_network
  
  vector:
    depends_on:
      - kafka
      - clickhouse
    image: timberio/vector:0.41.0-debian
    container_name: vector
    hostname: vector
    ports:
      - 8686:8686
    volumes:
      - ./vector.yaml:/etc/vector/vector.yaml:ro
      - vector_data:/var/lib/vector
    restart: unless-stopped
    networks:
      - private_network

volumes:
  postgres_data:
    driver: local
  kafka_data:
    driver: local
  clickhouse_data:
    driver: local
  vector_data:
    driver: local

networks:
  private_network:
    driver: bridge